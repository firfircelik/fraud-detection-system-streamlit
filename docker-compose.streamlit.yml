# Streamlit Fraud Detection System - Docker Compose
# Streamlit odaklı basitleştirilmiş konfigürasyon

version: '3.8'

services:
  # Ana Streamlit Dashboard
  streamlit-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=500
      - FRAUD_API_URL=http://fraud-api:8080/api
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fraud-network
    restart: unless-stopped

  # Opsiyonel: Basit CSV Processor
  csv-processor:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    command: streamlit run simple_csv_app.py --server.port 8503 --server.address 0.0.0.0
    ports:
      - "8503:8503"
    volumes:
      - ./data:/app/data
    networks:
      - fraud-network
    restart: unless-stopped

  # PostgreSQL (veri saklama için)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fraud_detection
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: fraud_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fraud_user -d fraud_detection"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fraud-network
    restart: unless-stopped

  # Redis (caching için)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fraud-network
    restart: unless-stopped

  # Opsiyonel: Backend API (FastAPI)
  fraud-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://fraud_user:fraud_password@postgres:5432/fraud_detection
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fraud-network
    restart: unless-stopped

  # Nginx Load Balancer (opsiyonel)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - streamlit-dashboard
      - csv-processor
    networks:
      - fraud-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fraud-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
